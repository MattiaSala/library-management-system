{
  "uuid": "5e4be9d3-362d-4b39-b90a-f3dde22eaecd",
  "lastMigration": 33,
  "name": "Library API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "folders": [],
  "routes": [
      {
          "uuid": "b8885086-99d9-47db-9b0a-851ed920efe3",
          "type": "http",
          "documentation": "",
          "method": "post",
          "endpoint": "auth/login",
          "responses": [
              {
                  "uuid": "53e43805-57d7-4a2d-8238-a227f4063c7c",
                  "body": "{\r\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n  \"expire_in_sec\":\"3600\",\r\n  \"role\": \"user\"\r\n}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "user",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "dxfp",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "body",
                          "modifier": "username",
                          "value": "mario",
                          "invert": false,
                          "operator": "equals"
                      },
                      {
                          "target": "body",
                          "modifier": "password",
                          "value": "rossi",
                          "invert": false,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "AND",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "a65d22d2-d724-40c8-9f13-fb5b7fcc82a0",
                  "body": "{\r\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c\",\r\n  \"expire_in_sec\":\"3600\",\r\n  \"role\": \"admin\"\r\n}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "admin",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "dxfp",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "body",
                          "modifier": "username",
                          "value": "admin",
                          "invert": false,
                          "operator": "equals"
                      },
                      {
                          "target": "body",
                          "modifier": "password",
                          "value": "admin",
                          "invert": false,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "AND",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "876bad4f-c5d4-48f2-9e77-91dd9f8cdcac",
                  "body": "{\n  \"message\":\"Invalid credentials. Please try again.\"\n}",
                  "latency": 0,
                  "statusCode": 404,
                  "label": "User not found",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "body",
                          "modifier": "username",
                          "value": "mario",
                          "invert": true,
                          "operator": "equals"
                      },
                      {
                          "target": "body",
                          "modifier": "password",
                          "value": "rossi",
                          "invert": true,
                          "operator": "equals"
                      },
                      {
                          "target": "body",
                          "modifier": "username",
                          "value": "admin",
                          "invert": true,
                          "operator": "equals"
                      },
                      {
                          "target": "body",
                          "modifier": "password",
                          "value": "admin",
                          "invert": true,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "2bb3693e-2221-44ca-931c-c1588516c4b6",
          "type": "http",
          "documentation": "",
          "method": "get",
          "endpoint": "books",
          "responses": [
              {
                  "uuid": "cfd23fbb-87ac-47d6-89fe-b689a5938a5f",
                  "body": "{\r\n  \"books\" : \r\n  [\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"The Great Gatsby\",\r\n      \"author\": \"F. Scott Fitzgerald\",\r\n      \"is_borrowed\": false\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"title\": \"1984\",\r\n      \"author\": \"George Orwell\",\r\n      \"is_borrowed\": true\r\n    }\r\n  ]\r\n}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "",
                  "headers": [],
                  "bodyType": "DATABUCKET",
                  "filePath": "",
                  "databucketID": "s0fx",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "AND",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "c728d792-1801-4f74-a99f-661a3fedb746",
          "type": "http",
          "documentation": "",
          "method": "post",
          "endpoint": "books/:id/borrow",
          "responses": [
              {
                  "uuid": "853102af-98af-4b29-8a53-46347ceb792b",
                  "body": "{\r\n  {{setData 'set' 'Books' (concat 'books.' (urlParam 'id') '.is_borrowed') true}}\r\n  \r\n  \"is_borrowed\": {{data 'Books' (concat 'books.' (urlParam 'id') '.is_borrowed')}}\r\n}\r\n",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "sk2v",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "bf72f609-45fd-470d-8717-6eecbd5bbf6a",
                  "body": "{}",
                  "latency": 0,
                  "statusCode": 400,
                  "label": "",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "data_bucket",
                          "modifier": "Books.id",
                          "value": "",
                          "invert": false,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "072e5e29-aae0-431c-b5b2-bd79e8535058",
          "type": "http",
          "documentation": "",
          "method": "post",
          "endpoint": "books/:id/return",
          "responses": [
              {
                  "uuid": "40b5b353-8283-4693-8c02-54ff7cc09601",
                  "body": "{\n  {{setData 'set' 'Books' (concat 'books.' (urlParam 'id') '.is_borrowed') false}}\n  \n  \"is_borrowed\": {{data 'Books' (concat 'books.' (urlParam 'id') '.is_borrowed')}}\n}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "6946ad40-da30-4835-ae0b-be1d22ab9501",
          "type": "http",
          "documentation": "",
          "method": "all",
          "endpoint": "egg",
          "responses": [
              {
                  "uuid": "315f5121-4886-4237-9ebd-02a145d19696",
                  "body": "",
                  "latency": 0,
                  "statusCode": 401,
                  "label": "",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "header",
                          "modifier": "Authorization",
                          "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                          "invert": true,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "cc7c2019-3462-4f46-b5fb-85ab2b47e258",
          "type": "http",
          "documentation": "Delete a book",
          "method": "delete",
          "endpoint": "books/:id",
          "responses": [
              {
                  "uuid": "5c6087c9-81cb-4e14-ae29-6376b45deafe",
                  "body": "{{setData 'set' 'Books.books' (filter (data 'Books.books') (lambda (book) (not (eq (toString book.id) (urlParam 'id')))))}}\r\n\r\n\r\n{\r\n  \"message\": \"The book {{urlParam 'id'}} has been deleted\"\r\n}\r\n",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "Delete a book by id",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "s0fx",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "ba8eb750-646f-461c-af20-845f34f6daa3",
                  "body": "{\n  \"message\":\"Book not found. Probably has been deleted.\"\n}",
                  "latency": 0,
                  "statusCode": 404,
                  "label": "Book already deleted",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "data_bucket",
                          "modifier": "",
                          "value": "",
                          "invert": false,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "019fa9b1-5366-43d8-aedd-4eb62014dea2",
          "type": "http",
          "documentation": "Add a new book",
          "method": "post",
          "endpoint": "books",
          "responses": [
              {
                  "uuid": "75a19686-58f0-42c9-9997-a6fb9b92a534",
                  "body": "{\r\n  {{setData 'push' 'Books' 'books' (object \r\n    id=(len (dataRaw 'Books' 'books')) \r\n    title=(bodyRaw 'title') \r\n    author=(bodyRaw 'author') \r\n    is_borrowed=false\r\n  )}}\r\n  \r\n  \"message\": \"New book added successfully\",\r\n  \"new_book\": {{last (data 'Books' 'books')}}\r\n}",
                  "latency": 0,
                  "statusCode": 201,
                  "label": "Books added",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "s0fx",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "0f13b990-f0cd-4041-a96a-0daee34a43d3",
                  "body": "{\n  \"message\":\"The input data is invalid or does not meet validation requirements.\"\n}",
                  "latency": 0,
                  "statusCode": 400,
                  "label": "Invalid Input data",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "body",
                          "modifier": "title",
                          "value": "",
                          "invert": false,
                          "operator": "null"
                      },
                      {
                          "target": "body",
                          "modifier": "author",
                          "value": "",
                          "invert": false,
                          "operator": "null"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "e1e7ec46-64fc-4fcc-b9c9-bbaac945ca6a",
                  "body": "{\n  \"message\":\"The client must authenticate before performing this action.\"\n}",
                  "latency": 0,
                  "statusCode": 401,
                  "label": "Unauthorized access",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "2e598e90-0ece-420d-8096-ea8f962ceae5",
                  "body": "{\n  \"message\":\"The client is authenticated but does not have permission to add a new book.\"\n}",
                  "latency": 0,
                  "statusCode": 403,
                  "label": "Forbidden action",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "0c0e7e72-6a8d-45b8-aa6c-0eafe47aa548",
                  "body": "{\n  \"message\":\"Book already exists.\"\n}",
                  "latency": 0,
                  "statusCode": 409,
                  "label": "Conflict on",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [
                      {
                          "target": "body",
                          "modifier": "title",
                          "value": "",
                          "invert": false,
                          "operator": "equals"
                      }
                  ],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              },
              {
                  "uuid": "c418506d-a733-4c1a-8d1c-36e6dea456d7",
                  "body": "{\n  \"message\":\"An unexpected error occurred on the server.\"\n}",
                  "latency": 0,
                  "statusCode": 500,
                  "label": "Internal server error",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": false,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "905dab25-9218-42ac-9a4e-fd52618bea03",
          "type": "http",
          "documentation": "Edit book by id",
          "method": "put",
          "endpoint": "books/:id",
          "responses": [
              {
                  "uuid": "82f79a0e-8a91-4005-9705-99b7891f40cc",
                  "body": "{{setData 'set' 'Books' (concat 'books.' (urlParam 'id') '.title') (body 'title')}}\n{{setData 'set' 'Books' (concat 'books.' (urlParam 'id') '.author') (body 'author')}}\n\n{\n  \"message\":\"The book has been edited.\"\n}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "Book with id edited",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": null,
          "streamingMode": null,
          "streamingInterval": 0
      },
      {
          "uuid": "a3e1fe15-6fe3-4ddd-84a9-9e51fadfc913",
          "type": "http",
          "documentation": "",
          "method": "all",
          "endpoint": "*",
          "responses": [
              {
                  "uuid": "315c6ab5-2550-4b7d-b2c6-532d20707faa",
                  "body": "{}",
                  "latency": 0,
                  "statusCode": 200,
                  "label": "",
                  "headers": [],
                  "bodyType": "INLINE",
                  "filePath": "",
                  "databucketID": "",
                  "sendFileAsBody": false,
                  "rules": [],
                  "rulesOperator": "OR",
                  "disableTemplating": false,
                  "fallbackTo404": false,
                  "default": true,
                  "crudKey": "id",
                  "callbacks": []
              }
          ],
          "responseMode": "FALLBACK",
          "streamingMode": null,
          "streamingInterval": 0
      }
  ],
  "rootChildren": [
      {
          "type": "route",
          "uuid": "b8885086-99d9-47db-9b0a-851ed920efe3"
      },
      {
          "type": "route",
          "uuid": "a3e1fe15-6fe3-4ddd-84a9-9e51fadfc913"
      },
      {
          "type": "route",
          "uuid": "6946ad40-da30-4835-ae0b-be1d22ab9501"
      },
      {
          "type": "route",
          "uuid": "c728d792-1801-4f74-a99f-661a3fedb746"
      },
      {
          "type": "route",
          "uuid": "2bb3693e-2221-44ca-931c-c1588516c4b6"
      },
      {
          "type": "route",
          "uuid": "072e5e29-aae0-431c-b5b2-bd79e8535058"
      },
      {
          "type": "route",
          "uuid": "cc7c2019-3462-4f46-b5fb-85ab2b47e258"
      },
      {
          "type": "route",
          "uuid": "019fa9b1-5366-43d8-aedd-4eb62014dea2"
      },
      {
          "type": "route",
          "uuid": "905dab25-9218-42ac-9a4e-fd52618bea03"
      }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
      "enabled": false,
      "type": "CERT",
      "pfxPath": "",
      "certPath": "",
      "keyPath": "",
      "caPath": "",
      "passphrase": ""
  },
  "cors": true,
  "headers": [
      {
          "key": "Content-Type",
          "value": "application/json"
      },
      {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
      },
      {
          "key": "Access-Control-Allow-Methods",
          "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
      },
      {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
      }
  ],
  "proxyReqHeaders": [
      {
          "key": "",
          "value": ""
      }
  ],
  "proxyResHeaders": [
      {
          "key": "",
          "value": ""
      }
  ],
  "data": [
      {
          "uuid": "1627a74a-5def-4860-8856-b7623f3956a6",
          "id": "s0fx",
          "name": "Books",
          "documentation": "",
          "value": "{\r\n  \"books\" : \r\n  [\r\n    {\r\n      \"id\": 0,\r\n      \"title\": \"The Great Gatsby\",\r\n      \"author\": \"F. Scott Fitzgerald\",\r\n      \"is_borrowed\": false\r\n    },\r\n    {\r\n      \"id\": 1,\r\n      \"title\": \"1984\",\r\n      \"author\": \"George Orwell\",\r\n      \"is_borrowed\": true\r\n    }\r\n  ]\r\n}"
      },
      {
          "uuid": "97dd7903-7cb9-4887-a3fb-11d9066d446e",
          "id": "dxfp",
          "name": "Token",
          "documentation": "",
          "value": "{\n  \"token\": \"{{faker 'string.uuid'}}\", \n  \"expires_in_sec\":\"{{int 3600 5800}}\"\n}"
      },
      {
          "uuid": "1dfef9d3-337b-4ee3-8f35-6cfddefd28d6",
          "id": "sk2v",
          "name": "Test",
          "documentation": "",
          "value": "{\n  \"prova\":\"asdasd\"\n}"
      }
  ],
  "callbacks": []
}